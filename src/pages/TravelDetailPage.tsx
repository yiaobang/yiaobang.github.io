import { useParams, useNavigate } from 'react-router-dom';
import { useTranslation } from 'react-i18next';
import { useState, useEffect } from 'react';
import PhotoViewer from '../components/PhotoViewer';
import './TravelDetailPage.css';

const TravelDetailPage = () => {
  const { id } = useParams();
  const navigate = useNavigate();
  const { t } = useTranslation();
  const [photos, setPhotos] = useState<string[]>([]);
  const [loading, setLoading] = useState(true);
  const [viewerOpen, setViewerOpen] = useState(false);
  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);

  const openViewer = (index: number) => {
    setCurrentPhotoIndex(index);
    setViewerOpen(true);
  };

  const closeViewer = () => {
    setViewerOpen(false);
  };

  const travelDetails: Record<string, any> = {
    1: {
      location: 'Shimanami Kaido',
      locationZh: 'Â≤õÊ≥¢Êµ∑ÈÅì',
      date: '2024-07-29~30',
      folder: '1.„Åó„Åæ„Å™„ÅøÊµ∑ÈÅì',
      description: 'Amazing cycling route connecting islands with beautiful ocean views and bridges!',
      descriptionZh: 'ËøûÊé•Â≤õÂ±øÁöÑÁªùÁæéÈ™ëË°åË∑ØÁ∫øÔºåÊµ∑ÊôØÂíåÂ§ßÊ°•‰ª§‰∫∫ÈúáÊíºÔºÅ'
    },
    2: {
      location: 'Mount Ikoma',
      locationZh: 'ÁîüÈ©πÂ±±',
      date: '2024-08-11',
      folder: '2.ÁîüÈ©πÂ±±',
      description: 'Beautiful mountain views and peaceful nature walks with stunning panoramas.',
      descriptionZh: 'Áæé‰∏ΩÁöÑÂ±±ÊôØÂíåÂÆÅÈùôÁöÑËá™ÁÑ∂Êº´Ê≠•ÔºåÂÖ®ÊôØ‰ª§‰∫∫ÈöæÂøò„ÄÇ'
    },
    3: {
      location: 'Bicycle Museum',
      locationZh: 'Ëá™Ë°åËΩ¶ÂçöÁâ©È¶Ü',
      date: '2024-08-16',
      folder: '3.Ëá™Ëª¢ËªäÂçöÁâ©È§®',
      description: 'Fascinating history of bicycles and cycling culture exploration.',
      descriptionZh: 'Ëø∑‰∫∫ÁöÑËá™Ë°åËΩ¶ÂéÜÂè≤ÂíåÈ™ëË°åÊñáÂåñÊé¢Á¥¢‰πãÊóÖ„ÄÇ'
    },
    4: {
      location: 'Peaceful Afternoon',
      locationZh: 'Êüê‰∏™ÂçàÂêé',
      date: '2024-09-04',
      folder: '4.Êüê‰∏™ÂçàÂêé',
      description: 'A quiet moment captured in time, simple beauty of everyday life.',
      descriptionZh: 'Ë¢´ÂÆöÊ†ºÁöÑÂÆÅÈùôÊó∂ÂÖâÔºåÊó•Â∏∏ÁîüÊ¥ª‰∏≠ÁöÑÁÆÄÂçïÁæéÂ•Ω„ÄÇ'
    },
    5: {
      location: 'Mount Kongo, Nara',
      locationZh: 'Â•àËâØÈáëÂàöÂ±±',
      date: '2024-09-16',
      folder: '5.Â•àËâØÈáëÂàöÂ±±',
      description: 'Challenging mountain hike with rewarding views and nature immersion.',
      descriptionZh: 'ÂÖ∑ÊúâÊåëÊàòÊÄßÁöÑÁôªÂ±±‰πãÊóÖÔºåÊî∂Ëé∑ÁæéÊôØ‰∏éËá™ÁÑ∂Ê≤âÊµ∏„ÄÇ'
    },
    6: {
      location: 'Night Views',
      locationZh: 'Â§úÊôØ',
      date: '2024-12-20',
      folder: '6.Â§úÊôØ',
      description: 'Stunning city lights and magical night atmosphere.',
      descriptionZh: 'Ëø∑‰∫∫ÁöÑÂüéÂ∏ÇÁÅØÂÖâÂíåÁ•ûÂ•áÁöÑÂ§úÊôöÊ∞õÂõ¥„ÄÇ'
    },
    7: {
      location: 'Cherry Blossom Viewing',
      locationZh: 'ËµèÊ®±',
      date: '2025-04-06',
      folder: '7.„ÅäËä±Ë¶ã',
      description: 'Beautiful sakura season in full bloom, spring at its finest!',
      descriptionZh: 'Ê®±Ëä±ÁõõÂºÄÁöÑÁæé‰∏ΩÂ≠£ËäÇÔºåÊò•Â§©ÊúÄÁæéÁöÑÊó∂ÂàªÔºÅ'
    },
    8: {
      location: 'Abeno Harukas, Osaka',
      locationZh: 'Â§ßÈò™ÈòøÂÄçÈáéÂìàÈ≤ÅÂç°ÊñØ',
      date: '2025-05-06',
      folder: '8.„Éè„É´„Ç´„Çπ',
      description: 'Amazing views from Japan\'s tallest building, breathtaking cityscape!',
      descriptionZh: '‰ªéÊó•Êú¨ÊúÄÈ´òÊ•º‰øØÁû∞ÁöÑÊÉä‰∫∫ÊôØËâ≤Ôºå‰ª§‰∫∫Â±èÊÅØÁöÑÂüéÂ∏ÇÊôØËßÇÔºÅ'
    }
  };

  const trip = travelDetails[id as string];

  useEffect(() => {
    const loadPhotos = async () => {
      if (trip?.folder) {
        setLoading(true);
        try {
          // Âä®ÊÄÅÂØºÂÖ•ÊâÄÊúâÁÖßÁâá
          const photoModules = import.meta.glob('/src/assets/images/**/*.jpg', { eager: true });
          const folderPhotos: string[] = [];
          
          Object.keys(photoModules).forEach((path) => {
            if (path.includes(trip.folder)) {
              const module = photoModules[path] as { default: string };
              folderPhotos.push(module.default);
            }
          });
          
          // ÊåâÊñá‰ª∂ÂêçÊéíÂ∫è
          folderPhotos.sort();
          setPhotos(folderPhotos);
        } catch (error) {
          console.error('Error loading photos:', error);
        }
        setLoading(false);
      }
    };
    loadPhotos();
  }, [id, trip]);

  if (!trip) {
    return <div className="travel-detail-page">
      <div className="detail-header">
        <button className="back-button" onClick={() => navigate('/travel')}>
          ‚Üê Back to Timeline
        </button>
        <h1>Trip not found</h1>
      </div>
    </div>;
  }

  return (
    <div className="travel-detail-page">
      <div className="detail-header">
        <button className="back-button" onClick={() => navigate('/travel')}>
          ‚Üê Back to Timeline
        </button>
        <h1 className="detail-title">
          {t('language') === 'zh' ? trip.locationZh : trip.location}
        </h1>
        <div className="detail-date">{trip.date}</div>
      </div>

      <div className="photo-gallery">
        <h2 className="gallery-title">üì∏ Photo Gallery ({photos.length} photos)</h2>
        {loading ? (
          <div className="loading">Loading photos...</div>
        ) : (
          <div className="photos-grid">
            {photos.map((photo, index) => (
              <div key={index} className="photo-item" onClick={() => openViewer(index)}>
                <img src={photo} alt={`Photo ${index + 1}`} className="photo-image" />
                <div className="photo-overlay">
                  <span>üì∑ View Full Size</span>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      <div className="trip-story">
        <h2 className="story-title">‚ú® Travel Story</h2>
        <p className="story-text">
          {t('language') === 'zh' ? trip.descriptionZh : trip.description}
        </p>
      </div>
      
      {viewerOpen && (
        <PhotoViewer
          photos={photos}
          currentIndex={currentPhotoIndex}
          onClose={closeViewer}
        />
      )}
    </div>
  );
};

export default TravelDetailPage;